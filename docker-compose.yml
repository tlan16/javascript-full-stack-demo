version: '3'

services:
  backend:
    build: ./backend
    ports:
      - 3000:3000
      - 9229:9229
    volumes:
      - ./backend:/opt/app
      - /opt/app/node_modules
    command: npm run start:dev
    networks:
      - api-network
    tty: true
    depends_on:
      - mongo
      - redis
    restart: on-failure
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 5

  mongo:
    image: mongo:4.2.0
    ports:
      - 27017:27017
    restart: on-failure
    networks:
      - api-network
    volumes:
      - dbdata:/data/db
    healthcheck:
      test: echo 'db.stats().ok' | mongo localhost:27017/zenbrain --quiet
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:5.0.5-alpine3.10
    ports:
      - 6379:6379
    restart: on-failure
    networks:
      - api-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 8888:8888
    volumes:
      - ./frontend:/opt/app
      - /opt/app/node_modules
    command: npm run start
    depends_on:
      - backend
    networks:
      - app-network
    tty: true
    restart: on-failure
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8888"]
      interval: 30s
      timeout: 10s
      retries: 5

#Docker Networks
networks:
  api-network:
    driver: bridge
  app-network:
    driver: bridge

#Volumes
volumes:
  dbdata:
    driver: local
